
Allocating common symbols
Common symbol       size              file

tasks               0x50              main.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000008000000 0x0000000000100000 xr
SRAM             0x0000000020000000 0x0000000000020000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD led.o
LOAD main.o
LOAD startup_stm32.o

.isr_vectors    0x0000000008000000       0x40
 *(.isr_vectors)
 .isr_vectors   0x0000000008000000       0x40 startup_stm32.o
                0x0000000008000000                vectors

.text           0x0000000008000040      0x548
 *(.text)
 .text          0x0000000008000040       0xfc led.o
                0x0000000008000040                delay
                0x0000000008000068                led_init
                0x00000000080000dc                led_on
                0x000000000800010c                led_off
 .text          0x000000000800013c      0x3c0 main.o
                0x000000000800013c                task_delay
                0x000000000800018c                switch_sp_to_psp
                0x00000000080001a6                systick_init
                0x0000000008000208                PendSV_handler
                0x000000000800022e                SysTick_handler
                0x000000000800024c                init_tasks
                0x0000000008000310                scheduler_init
                0x0000000008000318                get_psp
                0x0000000008000338                set_psp
                0x0000000008000360                update_next_task
                0x00000000080003dc                schedule
                0x0000000008000400                unblock_tasks
                0x0000000008000450                idle_task
                0x0000000008000456                task1_handler
                0x0000000008000478                task2_handler
                0x000000000800049a                task3_handler
                0x00000000080004b8                task4_handler
                0x00000000080004d6                main
 .text          0x00000000080004fc       0x8c startup_stm32.o
                0x00000000080004fc                NMI_handler
                0x00000000080004fc                MemManage_handler
                0x00000000080004fc                HardFault_handler
                0x00000000080004fc                DebugMon_handler
                0x00000000080004fc                SVC_handler
                0x00000000080004fc                UsageFault_handler
                0x00000000080004fc                BusFault_handler
                0x00000000080004fc                Default_handler
                0x0000000008000502                Reset_handler
 *(.rodata)
                0x0000000008000588                . = ALIGN (0x4)
                0x0000000008000588                _end_text = .

.glue_7         0x0000000008000588        0x0
 .glue_7        0x0000000008000588        0x0 linker stubs

.glue_7t        0x0000000008000588        0x0
 .glue_7t       0x0000000008000588        0x0 linker stubs

.vfp11_veneer   0x0000000008000588        0x0
 .vfp11_veneer  0x0000000008000588        0x0 linker stubs

.v4_bx          0x0000000008000588        0x0
 .v4_bx         0x0000000008000588        0x0 linker stubs

.iplt           0x0000000008000588        0x0
 .iplt          0x0000000008000588        0x0 led.o

.rel.dyn        0x0000000008000588        0x0
 .rel.iplt      0x0000000008000588        0x0 led.o

.data           0x0000000020000000       0x2c load address 0x0000000008000588
                0x0000000020000000                _start_data = .
 *(.data)
 .data          0x0000000020000000        0x0 led.o
 .data          0x0000000020000000       0x2c main.o
                0x0000000020000000                task_stacks
                0x0000000020000014                handlers
                0x0000000020000028                current_task
 .data          0x000000002000002c        0x0 startup_stm32.o
                0x000000002000002c                . = ALIGN (0x4)
                0x000000002000002c                _end_data = .

.igot.plt       0x000000002000002c        0x0 load address 0x00000000080005b4
 .igot.plt      0x000000002000002c        0x0 led.o

.bss            0x000000002000002c       0x54 load address 0x00000000080005b4
                0x000000002000002c                _start_bss = .
 *(.bss)
 .bss           0x000000002000002c        0x0 led.o
 .bss           0x000000002000002c        0x4 main.o
                0x000000002000002c                ticks
 .bss           0x0000000020000030        0x0 startup_stm32.o
 *(COMMON)
 COMMON         0x0000000020000030       0x50 main.o
                0x0000000020000030                tasks
                0x0000000020000080                . = ALIGN (0x4)
                0x0000000020000080                _end_bss = .
OUTPUT(final.elf elf32-littlearm)
LOAD linker stubs

.comment        0x0000000000000000       0x59
 .comment       0x0000000000000000       0x59 led.o
                                         0x5a (size before relaxing)
 .comment       0x0000000000000059       0x5a main.o
 .comment       0x0000000000000059       0x5a startup_stm32.o

.ARM.attributes
                0x0000000000000000       0x2e
 .ARM.attributes
                0x0000000000000000       0x2e led.o
 .ARM.attributes
                0x000000000000002e       0x2e main.o
 .ARM.attributes
                0x000000000000005c       0x2e startup_stm32.o
